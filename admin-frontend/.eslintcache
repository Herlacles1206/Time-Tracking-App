[{"D:\\Projects\\FaceTracking\\admin-frontend\\src\\index.js":"1","D:\\Projects\\FaceTracking\\admin-frontend\\src\\Dashboard.js":"2","D:\\Projects\\FaceTracking\\admin-frontend\\src\\TrackDashboard.js":"3","D:\\Projects\\FaceTracking\\admin-frontend\\src\\Login.js":"4","D:\\Projects\\FaceTracking\\admin-frontend\\src\\Register.js":"5","D:\\Projects\\FaceTracking\\admin-frontend\\src\\utils.js":"6"},{"size":697,"mtime":1698610085345,"results":"7","hashOfConfig":"8"},{"size":13982,"mtime":1698642573032,"results":"9","hashOfConfig":"8"},{"size":8304,"mtime":1698623377245,"results":"10","hashOfConfig":"8"},{"size":2715,"mtime":1698423211160,"results":"11","hashOfConfig":"8"},{"size":3193,"mtime":1698415785568,"results":"12","hashOfConfig":"8"},{"size":279,"mtime":1698413096211,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1f1ch5d",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\Projects\\FaceTracking\\admin-frontend\\src\\index.js",[],["30","31"],"D:\\Projects\\FaceTracking\\admin-frontend\\src\\Dashboard.js",["32","33","34","35","36","37","38","39","40","41"],"D:\\Projects\\FaceTracking\\admin-frontend\\src\\TrackDashboard.js",["42","43","44"],"import React, { Component } from 'react';\r\nimport {\r\n  Button, TextField, Dialog, DialogActions, LinearProgress,\r\n  DialogTitle, DialogContent, TableBody, Table,\r\n  TableContainer, TableHead, TableRow, TableCell\r\n} from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\r\nimport swal from 'sweetalert';\r\nimport { withRouter } from './utils';\r\nimport { blue } from 'material-ui/colors';\r\nimport HSBar from \"react-horizontal-stacked-bar-chart\";\r\nimport dayjs from 'dayjs';\r\nconst axios = require('axios');\r\n\r\nclass TrackDashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      token: '',\r\n      openModal: false,\r\n      id: '',\r\n      email: '',\r\n      username: '',\r\n      loading: false,\r\n      fromDate: new Date(),\r\n      toDate: new Date()  \r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    let token = localStorage.getItem('token');\r\n    if (!token) {\r\n      // this.props.history.push('/login');\r\n      this.props.navigate(\"/login\");\r\n    } else {\r\n      this.setState({ token: token }, () => {\r\n        this.getUser();\r\n      });\r\n    }\r\n  }\r\n  setDateValue = (newValue, dir) => {\r\n    if (dir === true)\r\n      this.setState({ toDate: newValue },()=>{console.log(this.state);});\r\n    else\r\n      this.setState({ fromDate: newValue },()=>{console.log(this.state);});\r\n  }\r\n  getUser = () => {\r\n    \r\n    this.setState({ loading: true });\r\n\r\n    let data = '?';\r\n    data = `${data}page=${this.state.page}`;\r\n    if (this.state.search) {\r\n      data = `${data}&search=${this.state.search}`;\r\n    }\r\n    axios.get(`http://localhost:2000/get-user${data}`, {\r\n      headers: {\r\n        'token': this.state.token\r\n      }\r\n    }).then((res) => {\r\n      this.setState({ loading: false, users: res.data.users, pages: res.data.pages });\r\n    }).catch((err) => {\r\n      swal({\r\n        text: err.response.data.errorMessage,\r\n        icon: \"error\",\r\n        type: \"error\"\r\n      });\r\n      this.setState({ loading: false, users: [], pages: 0 },()=>{});\r\n    });\r\n  }\r\n\r\n  logOut = () => {\r\n    localStorage.setItem('token', null);\r\n    // this.props.history.push('/');\r\n    this.props.navigate(\"/\");\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => { });\r\n    if (e.target.name == 'search') {\r\n      this.setState({ page: 1 }, () => {\r\n        this.getUser();\r\n      });\r\n    }\r\n  };\r\n\r\n  addUser = () => {\r\n    axios.post('http://localhost:2000/add-user', {\r\n        username: this.state.username,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        confirm_password: this.state.confirm_password\r\n      }, {\r\n        headers: {\r\n          'token': this.state.token\r\n      }\r\n    }).then((res) => {\r\n\r\n      swal({\r\n        text: res.data.title,\r\n        icon: \"success\",\r\n        type: \"success\"\r\n      });\r\n\r\n      this.handleUserClose();\r\n      this.setState({ email: '', username: '', password: '', confirm_password: '', file: null, page: 1 }, () => {\r\n        this.getUser();\r\n      });\r\n    }).catch((err) => {\r\n      swal({\r\n        text: err.response.data.errorMessage,\r\n        icon: \"error\",\r\n        type: \"error\"\r\n      });\r\n      this.handleUserClose();\r\n    });\r\n  }\r\n\r\n  handleInfoOpen = () => {\r\n    this.setState({\r\n      openModal: true,\r\n      id: '',\r\n      username: '',\r\n      email: '',\r\n    });\r\n  };\r\n\r\n  handleInfoClose = () => {\r\n    this.setState({ openModal: false });\r\n  };\r\n\r\n  render() {\r\n    const timelineData = [];\r\n    // Using a for loop to cycle from 0 to 24\r\n    for (let i = 0; i <= 23; i++) {\r\n        timelineData.push({\r\n            value: 1,\r\n            color: \"red\",\r\n            description: `${String(i).padStart(2, '0')}:00`\r\n        })\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.loading && <LinearProgress size={40} />}\r\n        <div>\r\n          <h2>Time Tracking Dashboard</h2>\r\n          <Button\r\n            className=\"button_style\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            onClick={this.logOut}\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </div>\r\n        <br />\r\n        {/* View Interval */}\r\n        <Dialog\r\n          open={this.state.openUserEditModal}\r\n          onClose={this.handleUserClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">Edit User</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              placeholder=\"User Name\"\r\n              required\r\n            /><br />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              placeholder=\"Email\"\r\n              required\r\n            /><br />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              placeholder=\"Password\"\r\n              required\r\n            /><br />\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            \r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <br />\r\n        <div>\r\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <DatePicker\r\n              label=\"From\"\r\n              name=\"fromDate\"\r\n              value={dayjs(this.state.fromDate)}\r\n              // onChange={this.onChange}\r\n              onChange={(newValue) => this.setDateValue(newValue, false)}\r\n            />\r\n            <DatePicker\r\n              label=\"To\"\r\n              name=\"toDate\"\r\n              value={dayjs(this.state.toDate)}\r\n              // onChange={this.onChange}\r\n              onChange={(newValue) => this.setDateValue(newValue, true)}\r\n            />\r\n          </LocalizationProvider>\r\n        </div>\r\n        <br />\r\n        <TableContainer enablePinning>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\" style={{ zIndex: 1, position: 'sticky', left: 0, backgroundColor: \"#ddd\", width: '50px' }}>Date</TableCell>\r\n                <TableCell align=\"center\" stype={{width: '50px', }}>Time</TableCell>\r\n                <TableCell align=\"center\" style={{ zIndex: 1, position: 'sticky', left: 0, backgroundColor: \"#ddd\", }}>\r\n                    <HSBar height={0} showTextUp data={timelineData}></HSBar>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                <TableRow key={10/27}>\r\n                  <TableCell align=\"center\" component=\"th\" scope=\"row\" style={{ zIndex: 1, position: 'sticky', left: 0, backgroundColor: \"#ddd\", }}>\r\n                    10/27\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                    09:50h\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <HSBar data={[{value: 10}, {value: 10}, {value: 50}, {value: 170}]} onClick={e => console.log(e.bar)}></HSBar>\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow key={10/26}>\r\n                  <TableCell align=\"center\" component=\"th\" scope=\"row\" style={{ zIndex: 1, position: 'sticky', left: 0, backgroundColor: \"#ddd\", }}>\r\n                    10/26\r\n                  </TableCell>\r\n                  <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                    07:30h\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <HSBar data={[{value: 40}, {value: 40}, {value: 20}]}></HSBar>\r\n                  </TableCell>\r\n                </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n          <br />\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(TrackDashboard);","D:\\Projects\\FaceTracking\\admin-frontend\\src\\Login.js",["45","46","47","48"],"import React, { Component } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport { Button, TextField, Link } from \"@material-ui/core\";\r\nimport { withRouter } from \"./utils\";\r\nconst axios = require(\"axios\");\r\nconst bcrypt = require(\"bcryptjs\");\r\nvar salt = bcrypt.genSaltSync(10);\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  login = () => {\r\n    // const pwd = bcrypt.hashSync(this.state.password, salt);\r\n    const pwd = this.state.password;\r\n\r\n    axios.post('http://localhost:2000/login', {\r\n      email: this.state.email,\r\n      password: pwd,\r\n    }).then((res) => {\r\n      localStorage.setItem('token', res.data.token);\r\n      localStorage.setItem('user_id', res.data.id);\r\n      // this.props.history.push('/dashboard');\r\n      this.props.navigate(\"/dashboard\");\r\n    }).catch((err) => {\r\n      if (err.response && err.response.data && err.response.data.errorMessage) {\r\n        swal({\r\n          text: err.response.data.errorMessage,\r\n          icon: \"error\",\r\n          type: \"error\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: '200px' }}>\r\n        <div>\r\n          <h2>Login</h2>\r\n        </div>\r\n\r\n        <div>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n            placeholder=\"Email\"\r\n            required\r\n          />\r\n          <br /><br />\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <br /><br />\r\n          <Button\r\n            className=\"button_style\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            disabled={this.state.email == '' && this.state.password == ''}\r\n            onClick={this.login}\r\n          >\r\n            Login\r\n          </Button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <Link\r\n            // href=\"/register\"\r\n            component=\"button\"\r\n            style={{ fontFamily: \"inherit\", fontSize: \"inherit\" }}\r\n            onClick={() => {\r\n              this.props.navigate(\"/register\");\r\n            }}\r\n          >\r\n            Register\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","D:\\Projects\\FaceTracking\\admin-frontend\\src\\Register.js",["49","50","51"],"import React, { Component } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport { Button, TextField, Link } from \"@material-ui/core\";\r\nimport { withRouter } from \"./utils\";\r\nconst axios = require(\"axios\");\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      confirm_password: ''\r\n    };\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  register = () => {\r\n\r\n    axios.post('http://localhost:2000/register', {\r\n      username: this.state.username,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    }).then((res) => {\r\n      swal({\r\n        text: res.data.title,\r\n        icon: \"success\",\r\n        type: \"success\"\r\n      });\r\n      // this.props.history.push('/');\r\n      this.props.navigate(\"/\");\r\n    }).catch((err) => {\r\n      swal({\r\n        text: err.response.data.errorMessage,\r\n        icon: \"error\",\r\n        type: \"error\"\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: '200px' }}>\r\n        <div>\r\n          <h2>Register</h2>\r\n        </div>\r\n\r\n        <div>\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.onChange}\r\n            placeholder=\"User Name\"\r\n            required\r\n          />\r\n          <br /><br />\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n            placeholder=\"Email\"\r\n            required\r\n          />\r\n          <br /><br />\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <br /><br />\r\n          <TextField\r\n            id=\"standard-basic\"\r\n            type=\"password\"\r\n            autoComplete=\"off\"\r\n            name=\"confirm_password\"\r\n            value={this.state.confirm_password}\r\n            onChange={this.onChange}\r\n            placeholder=\"Confirm Password\"\r\n            required\r\n          />\r\n          <br /><br />\r\n          <Button\r\n            className=\"button_style\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            disabled={this.state.username == '' && this.state.password == ''}\r\n            onClick={this.register}\r\n          >\r\n            Register\r\n          </Button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <Link\r\n            // href=\"/\"\r\n            component=\"button\"\r\n            style={{ fontFamily: \"inherit\", fontSize: \"inherit\" }}\r\n            onClick={() => {\r\n              this.props.navigate(\"/\");\r\n            }}\r\n          >\r\n            Login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Register);\r\n","D:\\Projects\\FaceTracking\\admin-frontend\\src\\utils.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":116,"column":23,"nodeType":"58","messageId":"59","endLine":116,"endColumn":25},{"ruleId":"56","severity":1,"message":"57","line":337,"column":45,"nodeType":"58","messageId":"59","endLine":337,"endColumn":47},{"ruleId":"56","severity":1,"message":"57","line":337,"column":71,"nodeType":"58","messageId":"59","endLine":337,"endColumn":73},{"ruleId":"56","severity":1,"message":"57","line":337,"column":100,"nodeType":"58","messageId":"59","endLine":337,"endColumn":102},{"ruleId":"56","severity":1,"message":"57","line":337,"column":137,"nodeType":"58","messageId":"59","endLine":337,"endColumn":139},{"ruleId":"56","severity":1,"message":"57","line":400,"column":45,"nodeType":"58","messageId":"59","endLine":400,"endColumn":47},{"ruleId":"56","severity":1,"message":"57","line":400,"column":71,"nodeType":"58","messageId":"59","endLine":400,"endColumn":73},{"ruleId":"56","severity":1,"message":"57","line":400,"column":100,"nodeType":"58","messageId":"59","endLine":400,"endColumn":102},{"ruleId":"56","severity":1,"message":"57","line":400,"column":137,"nodeType":"58","messageId":"59","endLine":400,"endColumn":139},{"ruleId":"60","severity":1,"message":"61","line":438,"column":45,"nodeType":"62","endLine":438,"endColumn":124},{"ruleId":"63","severity":1,"message":"64","line":7,"column":10,"nodeType":"65","messageId":"66","endLine":7,"endColumn":20},{"ruleId":"63","severity":1,"message":"67","line":13,"column":10,"nodeType":"65","messageId":"66","endLine":13,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":82,"column":23,"nodeType":"58","messageId":"59","endLine":82,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"63","severity":1,"message":"69","line":7,"column":5,"nodeType":"65","messageId":"66","endLine":7,"endColumn":9},{"ruleId":"56","severity":1,"message":"57","line":78,"column":40,"nodeType":"58","messageId":"59","endLine":78,"endColumn":42},{"ruleId":"56","severity":1,"message":"57","line":78,"column":69,"nodeType":"58","messageId":"59","endLine":78,"endColumn":71},{"ruleId":"63","severity":1,"message":"68","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":100,"column":43,"nodeType":"58","messageId":"59","endLine":100,"endColumn":45},{"ruleId":"56","severity":1,"message":"57","line":100,"column":72,"nodeType":"58","messageId":"59","endLine":100,"endColumn":74},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","'blue' is defined but never used.","'Component' is defined but never used.","'salt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]